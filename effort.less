@import "default.less";

#effortless
{
    /**
    * Text related modifiers
    */
    #text
    {
      .antialiased()
      {
        -webkit-font-smoothing: antialiased;
        -moz-font-smoothing: antialiased;
        -o-font-smoothing: antialiased;
        -ms-font-smoothing: antialiased;
        text-rendering: optimizeLegibility;
      }

      #shadow
      {
        .text(@colour : black){#effortless > #text > #shadow > .text(3px, 3px, 5px, @colour);}

        .text(@x: 3px, @y: 3px, @blur: 5px, @colour){text-shadow: @x @y @blur @colour;}

        .letterpress(@colour : white, @offset : 2px){#effortless > #text > #shadow > .text(@offset, @offset, @offset, fadeout(@colour, 10));}

        .hard(@colour: black, @offset : 2px){#effortless > #text > #shadow > .text(@offset, @offset, 0px, @colour);}

        // TODO: The rules below should be calling the base rule
        .double(@colour1 : white, @colour2: black, @offset : 2px)
        {
            text-shadow: @offset @offset 0px @colour1,
                                    @offset*2 @offset*2 0px @colour2;
        }

        .far(@colour : black, @x-offset : 0px, @y-offset : 2px)
        {
            text-shadow: @x-offset @y-offset 0px @colour, 
                                    @x-offset*1.5 @y-offset*1.5 @x-offset fadeout(@colour,  85),
                                    @x-offset*2.5 @y-offset*2.5 @x-offset fadeout(@colour, 90),
                                    @x-offset*3.5 @y-offset*3.5 @x-offset fadeout(@colour, 90);
        }

        .close(@colour : black, @x-offset : 0px, @y-offset : 2px)
        {
            text-shadow: @x-offset @y-offset 0px fadeout(@colour,  60),
                                    @x-offset*1.5 @y-offset*1.5 @x-offset fadeout(@colour,  90),
                                    @x-offset*2.5 @y-offset*2.5 @x-offset fadeout(@colour, 90);
        }

        .glow(@colour: white, @size : 6px){text-shadow: 0px 0px @size @colour, 0px 0px @size @colour;}
      }
    }

    /**
    * Border related modifiers
    */
    #border
    {
        /**
        * Gives an element a rounded border
        **/
        .rounded(@size : 1px, @type : solid, @colour : black, @radius : @corner-radius){#effortless > #border > .rounded(@size, @type, @colour, @radius, @radius, @radius, @radius);}
        .rounded(@size : 1px, @type : solid, @colour : black, @left, @right){#effortless > #border > .rounded(@size, @type, @colour, @left, @right, @right, @left);}
        .rounded(@size : 1px, @type : solid, @colour : black, @topLeft, @topRight, @bottomRight, @bottomLeft)
        {
            border: @size @type @colour;
            #effortless > #background > .rounded(@topLeft, @topRight, @bottomRight, @bottomLeft);
        }
    }


    /**
    * Background related modifiers
    */
    #background
    {
        .cover(@image)
        {
          background-image: url(@image);
          background-repeat: no-repeat;
          background-attachment: fixed;
          background-position: center;

          -webkit-background-size: cover;
          -moz-background-size: cover;
          -o-background-size: cover;
          background-size: cover;
        }

        /**
        * Ensures the background area is rounded
        */

        .rounded(@radius : @corner-radius){#effortless > #background > .rounded(@radius, @radius, @radius, @radius);}

        .rounded(@colour, @radius: @corner-radius) when (iscolor(@colour))
        {
            #effortless > #background > .rounded(@radius, @radius, @radius, @radius);
            background-color: @colour; 
        }

        .rounded(@left, @right){#effortless > #background > .rounded(@left, @right, @right, @left);}

        .rounded(@topLeft, @topRight, @bottomRight, @bottomLeft)
        {
            -webkit-border-radius: @arguments;
            -moz-border-radius: @arguments;
            border-radius: @arguments;
            -moz-background-clip: padding; 
            -webkit-background-clip: padding-box; 
            background-clip: padding-box; 
        }

        .rounded-topLeft(@radius : @corner-radius)
        {
            -webkit-border-top-left-radius: @arguments;
            -moz-border-top-left-radius: @arguments;
            border-top-left-radius: @arguments;
            -moz-background-clip: padding; 
            -webkit-background-clip: padding-box; 
            background-clip: padding-box; 
        }

        .rounded-bottomLeft(@radius : @corner-radius)
        {
            -webkit-border-bottom-left-radius: @arguments;
            -moz-border-bottom-left-radius: @arguments;
            border-bottom-left-radius: @arguments;
            -moz-background-clip: padding; 
            -webkit-background-clip: padding-box; 
            background-clip: padding-box; 
        }

        .rounded-topRight(@radius : @corner-radius)
        {
            -webkit-border-top-right-radius: @arguments;
            -moz-border-top-right-radius: @arguments;
            border-top-right-radius: @arguments;
            -moz-background-clip: padding; 
            -webkit-background-clip: padding-box; 
            background-clip: padding-box; 
        }

        .rounded-bottomRight(@radius : @corner-radius)
        {
            -webkit-border-bottom-right-radius: @arguments;
            -moz-border-bottom-right-radius: @arguments;
            border-bottom-right-radius: @arguments;
            -moz-background-clip: padding; 
            -webkit-background-clip: padding-box; 
            background-clip: padding-box; 
        }

        // TODO: Add support for multi value radii
        #gradient
        {
            // TODO: implment 3 colour gradients
            /**
            * Applies a cross browser gradient to the element, ie falls back to using a filter
            * current valid values for direction are horizontal, vertical, or the degrees, e.g. 45deg
            */
            // 2 colour
            .standardArgs(@direction, @colourOne, @percentOne, @colourTwo, @percentTwo)
            {
                background: ~"-moz-linear-gradient(center @{direction}, @{colourOne} @{percentOne}%, @{colourTwo} @{percentTwo}%)"; /* FF3.6+ */
                background: ~"-webkit-gradient(linear, left top, left bottom, color-stop(@{percentOne}%,@{colourOne}), color-stop(@{percentTwo}%,@{colourTwo}))"; /* Chrome,Safari4+ */
                background: ~"-webkit-linear-gradient(@{direction}, @{colourOne} @{percentOne}%,@{colourTwo} @{percentTwo}%)"; /* Chrome10+,Safari5.1+ */
                background: ~"-o-linear-gradient(@{direction}, @{colourOne} @{percentOne}%,@{colourTwo} @{percentTwo}%)"; /* Opera 11.10+ */
                background: ~"-ms-linear-gradient(@{direction}, @{colourOne} @{percentOne}%,@{colourTwo} @{percentTwo}%)"; /* IE10+ */
                background: ~"linear-gradient(@{direction}, @{colourOne} @{percentOne}%,@{colourTwo} @{percentTwo}%)"; /* W3C */
                filter: ~"progid:DXImageTransform.Microsoft.gradient( startColorstr='@{colourOne}', endColorstr='@{colourTwo}',GradientType=0 )"; /* IE6-8 */
            }
            // 4 colour
            .standardArgs(@direction, @colourOne, @percentOne, @colourTwo, @percentTwo,@colourThree, @percentThree,@colourFour, @percentFour)
            {
                // TODO : Add parsing for horizontal reverse, and vertical reverse
                background: ~"-moz-linear-gradient(center @{direction}, @{colourOne} @{percentOne}%, @{colourTwo} @{percentTwo}%, @{colourThree} @{percentThree}%, @{colourFour} @{percentFour}%)"; /* FF3.6+ */
                background: ~"-webkit-gradient(linear, left top, left bottom, color-stop(@{percentOne}%,@{colourOne}), color-stop(@{percentTwo}%,@{colourTwo}), color-stop(@{percentThree}%,@{colourThree}), color-stop(@{percentFour}%,@{colourFour}))"; /* Chrome,Safari4+ */
                background: ~"-webkit-linear-gradient(@{direction}, @{colourOne} @{percentOne}%,@{colourTwo} @{percentTwo}%,@{colourThree} @{percentThree}%,@{colourFour} @{percentFour}%)"; /* Chrome10+,Safari5.1+ */
                background: ~"-o-linear-gradient(@{direction}, @{colourOne} @{percentOne}%,@{colourTwo} @{percentTwo}%,@{colourThree} @{percentThree}%,@{colourFour} @{percentFour}%)"; /* Opera 11.10+ */
                background: ~"-ms-linear-gradient(@{direction}, @{colourOne} @{percentOne}%,@{colourTwo} @{percentTwo}%,@{colourThree} @{percentThree}%,@{colourFour} @{percentFour}%)"; /* IE10+ */
                background: ~"linear-gradient(@{direction}, @{colourOne} @{percentOne}%,@{colourTwo} @{percentTwo}%,@{colourThree} @{percentThree}%,@{colourFour} @{percentFour}%)"; /* W3C */
                filter: ~"progid:DXImageTransform.Microsoft.gradient( startColorstr='@{colourOne}', endColorstr='@{colourFour}',GradientType=0 )"; /* IE6-8 */
            }
            // 5 colour
            .standardArgs(@direction, @colourOne, @percentOne, @colourTwo, @percentTwo,@colourThree, @percentThree,@colourFour, @percentFour,@colourFive, @percentFive)
            {
                // TODO : Add parsing for horizontal reverse, and vertical reverse
                background: ~"-moz-linear-gradient(center @{direction}, @{colourOne} @{percentOne}%, @{colourTwo} @{percentTwo}%, @{colourThree} @{percentThree}%, @{colourFour} @{percentFour}%, @{colourFive} @{percentFive}%)"; /* FF3.6+ */
                background: ~"-webkit-gradient(linear, left top, left bottom, color-stop(@{percentOne}%,@{colourOne}), color-stop(@{percentTwo}%,@{colourTwo}), color-stop(@{percentThree}%,@{colourThree}), color-stop(@{percentFour}%,@{colourFour}), color-stop(@{percentFive}%,@{colourFive}))"; /* Chrome,Safari4+ */
                background: ~"-webkit-linear-gradient(@{direction}, @{colourOne} @{percentOne}%,@{colourTwo} @{percentTwo}%,@{colourThree} @{percentThree}%,@{colourFour} @{percentFour}%,@{colourFive} @{percentFive}%)"; /* Chrome10+,Safari5.1+ */
                background: ~"-o-linear-gradient(@{direction}, @{colourOne} @{percentOne}%,@{colourTwo} @{percentTwo}%,@{colourThree} @{percentThree}%,@{colourFour} @{percentFour}%,@{colourFive} @{percentFive}%)"; /* Opera 11.10+ */
                background: ~"-ms-linear-gradient(@{direction}, @{colourOne} @{percentOne}%,@{colourTwo} @{percentTwo}%,@{colourThree} @{percentThree}%,@{colourFour} @{percentFour}%,@{colourFive} @{percentFive}%)"; /* IE10+ */
                background: ~"linear-gradient(@{direction}, @{colourOne} @{percentOne}%,@{colourTwo} @{percentTwo}%,@{colourThree} @{percentThree}%,@{colourFour} @{percentFour}%,@{colourFive} @{percentFive}%)"; /* W3C */
                filter: ~"progid:DXImageTransform.Microsoft.gradient( startColorstr='@{colourOne}', endColorstr='@{colourFive}',GradientType=0 )"; /* IE6-8 */
            }
            // 2 colour
            .gradient(horizontal, @baseColour, @colourOne, @percentOne, @colourTwo, @percentTwo)
            {
                background-color: @baseColour;
                #effortless > #background > #gradient > .standardArgs(top, @colourOne, @percentOne, @colourTwo, @percentTwo);
            }
            .gradient(vertical, @baseColour, @colourOne, @percentOne, @colourTwo, @percentTwo)
            {
                background-color: @baseColour;
                #effortless > #background > #gradient > .standardArgs(left, @colourOne, @percentOne, @colourTwo, @percentTwo);
            }

            // 4 colour
            .gradient(horizontal, @baseColour, @colourOne, @percentOne, @colourTwo, @percentTwo, @colourThree, @percentThree, @colourFour, @percentFour)
            {
                background-color: @baseColour;
                #effortless > #background > #gradient > .standardArgs(top, @colourOne, @percentOne, @colourTwo, @percentTwo,@colourThree, @percentThree,@colourFour, @percentFour);
            }
            .gradient(vertical, @baseColour, @colourOne, @percentOne, @colourTwo, @percentTwo, @colourThree, @percentThree, @colourFour, @percentFour)
            {
                background-color: @baseColour;
                #effortless > #background > #gradient > .standardArgs(left, @colourOne, @percentOne, @colourTwo, @percentTwo,@colourThree, @percentThree,@colourFour, @percentFour);
            }
            .gradient(@direction, @baseColour, @colourOne, @percentOne, @colourTwo, @percentTwo, @colourThree, @percentThree, @colourFour, @percentFour)
            {
                background-color: @baseColour;
                #effortless > #background > #gradient > .standardArgs(@direction, @colourOne, @percentOne, @colourTwo, @percentTwo,@colourThree, @percentThree,@colourFour, @percentFour);
            }
            // 5 colour
            .gradient(horizontal, @baseColour, @colourOne, @percentOne, @colourTwo, @percentTwo, @colourThree, @percentThree, @colourFour, @percentFour, @colourFive, @percentFive)
            {
                background-color: @baseColour;
                #effortless > #background > #gradient > .standardArgs(horizontal, @colourOne, @percentOne, @colourTwo, @percentTwo,@colourThree, @percentThree,@colourFour, @percentFour,@colourFive, @percentFive);
            }
            .gradient(vertical, @baseColour, @colourOne, @percentOne, @colourTwo, @percentTwo, @colourThree, @percentThree, @colourFour, @percentFour, @colourFive, @percentFive)
            {
                background-color: @baseColour;
                #effortless > #background > #gradient > .standardArgs(vertical, @colourOne, @percentOne, @colourTwo, @percentTwo,@colourThree, @percentThree,@colourFour, @percentFour,@colourFive, @percentFive);
            }
            .gradient(@direction, @baseColour, @colourOne, @percentOne, @colourTwo, @percentTwo, @colourThree, @percentThree, @colourFour, @percentFour, @colourFive, @percentFive)
            {
                background-color: @baseColour;
                #effortless > #background > #gradient > .standardArgs(@direction, @colourOne, @percentOne, @colourTwo, @percentTwo,@colourThree, @percentThree,@colourFour, @percentFour,@colourFive, @percentFive);
            }

            .pipe(@baseColour : #000000, @basePercent : 50, @modifier : 2, @direction : horizontal)
            {
                // TODO: Automate image Generation of pipe gradient
                #effortless > #background > #gradient > .gradient(@direction, @baseColour,
                                        lighten(desaturate(@baseColour, 60%), 40%), 0,
                                        lighten(desaturate(@baseColour, 40%), 15%), @basePercent / @modifier,
                                        @baseColour, @basePercent,
                                        lighten(desaturate(@baseColour, 30%), 10%), 100 - (@basePercent / @modifier),
                                        lighten(desaturate(@baseColour, 50%), 30%), 100);
            }
            .fade(@topColour: #ffffff, @bottomColour: #000000, @direction : horizontal, @topPercent : 0, @bottomPercent : 100)
            {
                #effortless > #background > #gradient > .gradient(@direction, @topColour,
                                        @topColour, @topPercent, @bottomColour, @bottomPercent);
            }

            .gloss(@colour: #000000, @position: 50, @direction : horizontal)
            {
                #effortless > #background > #gradient > .gradient(@direction, @colour,
                                        darken(@colour, 7.5), 0,
                                        @colour, @position, 
                                        darken(@colour, 17.5), @position, 
                                        @colour, 100);
            }
        }
    }

    /**
    * Layout modifiers in this namespace
    */
    #layout
    {

        /**
        * Horizontally Center the element
        **/
        .center()
        {
            display: block;
            margin-left: auto;
            margin-right: auto;
        }

        .centerContentVertical()
        {
            text-align: center;

            &:before{
                content: '';
                display: inline-block;
                height: 100%;
                vertical-align: middle;
                margin-right: -0.25em;
            }

            > *
            {
                display: inline-block;
                vertical-align: middle;
            }
        }

        .textColumns(@columns: 2, @style : none, @colour : @text-lightest, @width : 1px, @gap: 2em)
        {
          -webkit-column-count: @columns;
          -webkit-column-gap:@gap;
          -webkit-column-rule-style: @style;
          -webkit-column-rule-width: @width;
          -webkit-column-rule-color: @colour;
          -moz-column-count: @columns;
          -moz-column-gap: @gap;
          -moz-column-rule-style: @style;
          -moz-column-rule-width: @width;
          -moz-column-rule-color: @colour;
          -column-count: @columns;
          -column-gap:@gap;
          -column-rule-style: @style;
          -column-rule-width: @width;
          -column-rule-color: @colour;
        }
    }

    /**
    * Animation helpers
    **/
    #animation
    {
        .bezier(@p1X: 0, @p1Y: 0, @p2X: 1, @p2Y: 1)
        {
            transition-timing-function: bezier(@p1X, @p1Y, @p2X, @p2Y);
            -moz-transition-timing-function: bezier(@p1X, @p1Y, @p2X, @p2Y);
            -webkit-transition-timing-function: bezier(@p1X, @p1Y, @p2X, @p2Y);
            -o-transition-timing-function: bezier(@p1X, @p1Y, @p2X, @p2Y);
        }

        .period(@millis: 500)
        {
            @acutalMillis: @millis * 1ms;
            transition-duration: @acutalMillis;
            -moz-transition-duration: @acutalMillis; /* Firefox 4 */
            -webkit-transition-duration: @acutalMillis; /* Safari and Chrome */
            -o-transition-duration: @acutalMillis; /* Opera */
        }

        .linear(@millis: 500)
        {
            #effortless > #animation > .period(@millis);
            #effortless > #animation > .bezier(0, 0, 1, 1);
        }

        .ease(@millis: 500)
        {
            #effortless > #animation > .period(@millis);
            #effortless > #animation > .bezier(0.25, 0.1, 0.25, 1);
        }

        .ease-in(@millis: 500)
        {
            #effortless > #animation > .period(@millis);
            #effortless > #animation > .bezier(0.42, 0, 1, 1);
        }

        .ease-out(@millis: 500)
        {
            #effortless > #animation > .period(@millis);
            #effortless > #animation > .bezier(0, 0, 0.58, 1);
        }

        .ease-in-out(@millis: 500)
        {
            #effortless > #animation > .period(@millis);
            #effortless > #animation > .bezier(0.42, 0, 0.58, 1);
        }
    }

    #shadow
    {
        .shadow(@values)
        {
            -webkit-box-shadow : @values;
            -moz-box-shadow : @values;
            box-shadow : @values;
        }

        .shadow(@x, @y, @blur, @spread, @colour)
        {
            #effortless > #shadow > .drop(@x, @y, @blur, @spread, @colour);
        }

        .shadow(@x, @y, @blur, @spread, @colour, @inset)
        {
            #effortless > #shadow > .inner(@x, @y, @blur, @spread, @colour);
        }

        .drop(@colour : @black)
        {
            #effortless > #shadow > .drop(3px, 3px, 5px, 5px, @colour);
        }

        .drop(@x: 3px, @y: 3px, @blur: 5px, @spread : 5px, @colour)
        {
            -webkit-box-shadow: @x @y @blur @colour;
            -moz-box-shadow: @x @y @blur @colour;
            box-shadow: @x @y @blur @colour;

            // TODO: Calculate angle from 0, 0 -> x, y;
            -ms-filter: ~"progid:DXImageTransform.Microsoft.Shadow(Strength=@{blur}, Direction=135, Color='@{colour}')";/* IE 8 */
            filter: ~"progid:DXImageTransform.Microsoft.Shadow(Strength=@{blur}, Direction=135, Color='@{colour}')";/* For IE 5.5 - 7 */
        }

        .reset()
        {
            -webkit-box-shadow: none;
            -moz-box-shadow: none;
            box-shadow: none;
            -ms-filter: none;
            filter: none;
        }

        .glow(@colour : white, @blur : 5px)
        {
            #effortless > #shadow > .drop(0, 0, @blur, 5px, @colour);
        }

        .inner(@colour : black)
        {
            #effortless > #shadow > .inner(2px, 2px, 3px, 3px, @colour);
        }

        .inner(@x, @y, @blur, @spread, @colour)
        {
            -webkit-box-shadow: inset @x @y @blur @spread @colour;
            -moz-box-shadow: inset @x @y @blur @spread @colour;
            box-shadow: inset @x @y @blur @spread @colour;
        }
        
    }

    // Helper for twitter bootstrap make-row
    .makeRow(@gutter: @grid-gutter-width)
    {
        .make-row(@gutter);
    }

    // Helper for twitter bootstrap make-column 
    .makeColumn(@columns)
    {
        .make-sm-column(@columns, @grid-gutter-width);
        .make-md-column(@columns, @grid-gutter-width);
        .make-lg-column(@columns, @grid-gutter-width);
    }

    // Helper for pushing columns using bootstrap
    .push(@columns)
    {
        .make-sm-column-push(@columns);
        .make-md-column-push(@columns);
        .make-lg-column-push(@columns);
    }

    // Helper for pulling columns using bootstrap
    .pull(@columns)
    {
        .make-sm-column-pull(@columns);
        .make-md-column-pull(@columns);
        .make-lg-column-pull(@columns);
    }
}

/**
* Global helpers
**/

// FROM http://nicolasgallagher.com/micro-clearfix-hack/
.cf
{
    /* For IE 6/7 (trigger hasLayout) */
      *zoom: 1;
    /* For modern browsers */
    &:before,
    &:after
    {
        content:"";
        display: table;
        // Fixes Opera/contenteditable bug:
        // http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
        line-height: 0;
    }
    &:after
    {
        clear: both;
    }
}

.column-1 {#effortless > .makeColumn(1);}
.column-2 {#effortless > .makeColumn(2);}
.column-3 {#effortless > .makeColumn(3);}
.column-4 {#effortless > .makeColumn(4);}
.column-5 {#effortless > .makeColumn(5);}
.column-6 {#effortless > .makeColumn(6);}
.column-7 {#effortless > .makeColumn(7);}
.column-8 {#effortless > .makeColumn(8);}
.column-9 {#effortless > .makeColumn(9);}
.column-10 {#effortless > .makeColumn(10);}
.column-11 {#effortless > .makeColumn(11);}
.column-12 {#effortless > .makeColumn(12);}

.push-1 {#effortless > .push(1);}
.push-2 {#effortless > .push(2);}
.push-3 {#effortless > .push(3);}
.push-4 {#effortless > .push(4);}
.push-5 {#effortless > .push(5);}
.push-6 {#effortless > .push(6);}
.push-7 {#effortless > .push(7);}
.push-8 {#effortless > .push(8);}
.push-9 {#effortless > .push(9);}
.push-10 {#effortless > .push(10);}
.push-11 {#effortless > .push(11);}
.push-12 {#effortless > .push(12);}

.pull-1 {#effortless > .pull(1);}
.pull-2 {#effortless > .pull(2);}
.pull-3 {#effortless > .pull(3);}
.pull-4 {#effortless > .pull(4);}
.pull-5 {#effortless > .pull(5);}
.pull-6 {#effortless > .pull(6);}
.pull-7 {#effortless > .pull(7);}
.pull-8 {#effortless > .pull(8);}
.pull-9 {#effortless > .pull(9);}
.pull-10 {#effortless > .pull(10);}
.pull-11 {#effortless > .pull(11);}
.pull-12 {#effortless > .pull(12);}

*
{
    -moz-box-sizing : border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}

span{display: inline-block;}  // Fix for firefox
